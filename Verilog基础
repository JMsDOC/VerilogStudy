Part 0

1. 宏观
（1）类C语言
（2）硬件语言 有硬件实现
（3）并行执行
（4）描述语言

2. HDL
(1)用HDL描述硬件，进行建模
(2)对复杂数字逻辑进行仿真
(3)自动综合，生成符合要求，且在电路结构上可以实现的数字逻辑网表(Netlist)
(4)根据网表&某种工艺的器件，生成具体电路
(5)在该工艺条件下生成具体电路延时模型
(6)仿真验证
(7)无误后用于制造ASIC芯片/写入CPLD和FPGA器件中

3. Verilog开发
寄存器传输级（RTL)

4. 软核/固核/硬核
softcore(虚拟器件)
firmcore(编码文件)
hardcore(版图)

======================================================================
======================================================================
Part 1
1. 自顶向下(Top-Down)设计的基本概念

2. Verilog HDL---> Netlist 前端

3. 设计开发
(1)编写设计文件
(2)综合
(3)布局布线
(4)投片生产

4. 设计验证
各阶段的仿真步骤

5. Verilog语法
(1)RTL: Reg Transfer Level
e.g.多路选择器
module muxtwo(out, a, b, sl);
	input a, b, sl;
	output out;
	reg out;
	always @(sl or a or b)
	if (! sl) out = a;
	else out = b;
endmodule




